import { useMutation } from '@tanstack/react-query';
import { writeContract, waitForTransactionReceipt } from '@wagmi/core';
import { CONTRACT_ABI, CONTRACT_ADDRESS } from '@/contract';
import { config } from '@/wagmi';

export const useSendToMission = (onSuccessCallback: () => void) => {
  const mutation = useMutation({
    mutationFn: async ({ heroId, missionId }: { heroId: number; missionId: number }) => {
      const tx = await writeContract(config, {
        address: CONTRACT_ADDRESS,
        abi: CONTRACT_ABI,
        functionName: 'sendToMission',
        args: [heroId, missionId],
      });

      // üü° –ñ–¥—ë–º –ø–æ–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è
      await waitForTransactionReceipt(config, { hash: tx });

      return tx;
    },
    onSuccess: () => {
      onSuccessCallback(); // ‚úÖ —Ç–µ–ø–µ—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ—á–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ
    },
  });

  return {
    sendToMission: mutation.mutate,
    isSending: mutation.isPending,
    error: mutation.error,
  };
};
