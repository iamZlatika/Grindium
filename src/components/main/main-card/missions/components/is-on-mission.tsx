
import { Button } from '@/components/ui/button';
import { useCheckIsOnMission } from '../hooks/useCheckIsOnMission';


interface IsOnMissionSectionProps {
  heroId: number | undefined;
}
const IsOnMissionSection = ({ heroId }: IsOnMissionSectionProps) => {
  const { isOnMission, isOnMissionPending, isOnMissionError, checkIsOnMission } =
    useCheckIsOnMission();

  const handleCheck = () => {
    if (heroId !== undefined) {
      checkIsOnMission(heroId);
    }
  };

  return (
    <div style={{ padding: 20 }}>
      <h1>ü¶∏ –ì–¥–µ –º–æ–π –≥–µ—Ä–æ–π?</h1>
      <Button onClick={handleCheck} variant="default">
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–µ—Ä–æ—è
      </Button>
      {isOnMissionPending && <p>–ü—Ä–æ–≤–µ—Ä—è–µ–º...</p>}
      {isOnMissionError && <p style={{ color: 'red' }}>–û—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: {isOnMissionError}</p>}
      {!isOnMissionPending && heroId !== undefined && (
        <p>–í–∞—à –≥–µ—Ä–æ–π {isOnMission ? '–Ω–∞ –∑–∞–¥–∞–Ω–∏–∏' : '–Ω–µ –Ω–∞ –∑–∞–¥–∞–Ω–∏–∏'}</p>
      )}
      {!isOnMissionPending && heroId === undefined && !isOnMissionError && (
        <p>–í–≤–µ–¥–∏—Ç–µ ID –≥–µ—Ä–æ—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.</p>
      )}
    </div>
  );
};

export default IsOnMissionSection;
